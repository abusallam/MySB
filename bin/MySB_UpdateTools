#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
. "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### MD5 sum for ~/install/*
rm -f "${MySB_InstallDir}"/files/md5sum.txt
find "${MySB_InstallDir}"/install/ -type f | while read -r sFile; do
    md5sum "${sFile}" >>"${MySB_InstallDir}"/files/md5sum.txt
done

#### PlexMedia & Tautulli update
if [ "${gbIsInstalled_PlexMedia}" == "YES" ]; then
    log_daemon_msg "${UpdateTools_Plex[*]}"
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/PlexMedia" 'CRON'
    gfnStatusLSB
fi

#### DNScrypt-proxy
if gfnCheckCommand 0 dnscrypt-proxy; then
    log_daemon_msg "${UpdateTools_DNScrypt[*]}"
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/DNScrypt" 'CRON'
    gfnStatusLSB
fi

#### Minio
# if gfnCheckCommand 0 minio; then
#     log_daemon_msg "${UpdateTools_Minio[*]}"
#     gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/S3" 'CRON'
#     gfnStatusLSB
# fi

#### Docker tools
# if gfnCheckCommand 0 docker; then
#     log_daemon_msg "${UpdateTools_DockerTools[*]}"
#     gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/Docker" 'CRON'
#     gfnStatusLSB
# fi

bRtorrentRestart=0
bSchemaUpgrade=0
gfnListCountUsers 'normal'

#### ruTorrent
sVersionDB="$(cmdMySQL 'MySB_db' "SELECT version FROM repositories WHERE name='ruTorrent';")"
sVersionInstalled="$(cat "${gsRutorrentDir}"/version)"
if [ -n "${sVersionDB}" ] && [ "${sVersionDB}" != "${sVersionInstalled}" ]; then
    cmdMySQL 'MySB_db' "DELETE FROM repositories;" -v
    mysql --defaults-extra-file=/root/.config.cnf --database=MySB_db --verbose <"$MySB_InstallDir/templates/mysql/Table_repositories.sql"
    cmdMySQL 'MySB_db' "UPDATE repositories SET upgrade = '1' WHERE name='ruTorrent';" -v
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/ruTorrent" 'UPGRADE'
fi
if (! grep -q 'rev 0.4' "${gsRutorrentDir}"/php/rtorrent.php); then
    install -o www-data -g www-data -m 0755 "${MySB_InstallDir}"/templates/rutorrent/rtorrent.php.tmpl "${gsRutorrentDir}"/php/rtorrent.php
fi

#### rTorrent scripts (to leave for next version ;-)
for sUser in ${gsUsersList}; do
    (! grep -q 'rev 0.9' "/etc/init.d/rtorrent-${sUser}") && bRtorrentRestart=1
    (! grep -q 'rev 0.6' "/home/${sUser}/.rtorrent.rc") && bRtorrentRestart=1
    (! grep -q 'rev 0.10' "/home/${sUser}/.rTorrent_erased.sh") && bRtorrentRestart=1
    (! grep -q 'rev 0.11' "/home/${sUser}/.rTorrent_finished.sh") && bRtorrentRestart=1
    if (! grep -q 'rev 0.12' "/home/${sUser}/.rTorrent_inserted_new.sh"); then
        bRtorrentRestart=1
        # To remove on next script version upgrade !
        bSchemaUpgrade=1
    fi
    (! grep -q 'rev 0.8' "/home/${sUser}/.rTorrent_tasks.sh") && bRtorrentRestart=1
    (! grep -q 'rev 0.10' "/home/${sUser}/scripts/synchro.sh") && bRtorrentRestart=1
done

#### rTorrent restart needed
if [[ ${bSchemaUpgrade} -eq 1 ]]; then
    cmdMySQL 'MySB_db' "ALTER TABLE torrents ADD is_recycled TINYINT(1) NOT NULL DEFAULT '0' AFTER users_ident;" -v 2>/dev/null
    cmdMySQL 'MySB_db' "ALTER TABLE trackers_list DROP COLUMN origin;" -v 2>/dev/null
fi
if [[ ${bRtorrentRestart} -eq 1 ]]; then
    for sUser in ${gsUsersList}; do
        gfnManageServices stop "rtorrent-${sUser}"

        # init.d
        install -o root -g root -m 0755 "${MySB_InstallDir}"/templates/rtorrent/etc.init.d.rtorrent.tmpl /etc/init.d/rtorrent-"${sUser}"
        perl -pi -e "s/<username>/${sUser}/g" /etc/init.d/rtorrent-"${sUser}"
        systemctl daemon-reload &>/dev/null
        systemctl disable rtorrent-"${sUser}" &>/dev/null
        rm -f /home/.check_annoncers_"${sUser}".*

        gfnManageServices start "rtorrent-${sUser}"

        # Add users allowed commands to sudoers.d (used by rTorrent scripts)
        {
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/cp -av /home/*/rtorrent/* /home/${sUser}/rtorrent/complete/*"
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/cp -alv /home/*/rtorrent/* /home/${sUser}/rtorrent/complete/*"
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/chown -Rv ${sUser}\:${sUser} /home/${sUser}/rtorrent/complete/*"
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/chown -Rv ${sUser}\:MySB_users /home/${sUser}/rtorrent/complete/*"
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/bash ${MySB_InstallDir}/scripts/GetTrackersCert.bsh USER ${sUser} [A-Z0-9]*"
            echo "${sUser} ALL= EXEC: NOPASSWD: /bin/bash /home/${sUser}/.rTorrent_tasks.sh*"
        } >"/etc/sudoers.d/MySB_${sUser}"
        chmod 0440 "/etc/sudoers.d/MySB_${sUser}"
    done
fi

#### Cron jobs
if (! grep -q 'rev 0.6' /etc/cron.d/MySB_jobs_check); then
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/Cron" 'UPGRADE'
fi

#### DNScrypt-proxy
if (! grep -q '_dnscrypt-proxy' /etc/passwd); then
    for sUser in ${gsUsersList}; do
        gfnManageServices stop "rtorrent-${sUser}"
    done
    gfnManageServices stop "dnscrypt-proxy"
    cmdMySQL 'MySB_db' "UPDATE services SET to_install = '1' WHERE serv_name='DNScrypt-proxy';" -v
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/DNScrypt" 'UPGRADE'
    # Renew security rules
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/bin/MySB_SecurityRules" 'create' "UPGRADE"
    # Force start if needed
    gfnManageServices start "dnscrypt-proxy"
    for sUser in ${gsUsersList}; do
        gfnManageServices start "rtorrent-${sUser}"
    done
fi

#### PeerGuardian
if (grep -q '^CHAINS' /etc/pgl/pglcmd.conf); then
    # shellcheck source=/dev/null
    source "${MySB_InstallDir}"/inc/funcs_by_script/funcs_PeerGuardian
    gfnPeerGuardianCreateBaseConfig
    pglcmd restart
fi

#### GeoIP
if (! grep -q '^UserId' /etc/GeoIP.conf); then
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/other/etc.geoip.conf.tmpl /etc/GeoIP.conf
    geoipupdate
fi

# -----------------------------------------
# shellcheck source=inc/includes_after
. "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
